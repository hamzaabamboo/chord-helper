{"version":3,"sources":["library/chord-magic/noteNamings.js","library/chord-magic/chordAddeds.js","library/chord-magic/chordSuspendeds.js","library/chord-magic/chordQualities.js","library/chord-magic/chordExtendeds.js","library/chord-magic/chordRegexes.js","library/chord-magic/reverseLookups.js","library/chord-magic/parse.js","library/chord-notes.js","library/react-piano/MidiNumbers.js","library/react-piano/Key.js","library/react-piano/Keyboard.js","library/react-piano/ControlledPiano.js","library/react-piano/Piano.js","library/react-piano/KeyboardShortcuts.js","App.js","serviceWorker.js","index.js"],"names":["noteNamings","English","A","Bb","B","C","Db","D","Eb","E","F","Gb","G","Ab","NorthernEuropean","SouthernEuropean","chordAddeds","Add9","Add11","Major6","SixNine","PowerChord","chordSuspendeds","Sus4","Sus2","chordQualities","Major","Minor","Augmented","Diminished","chordExtendeds","Major7","Minor7","Dominant7","MinorMajor7","Diminished7","Major9","Major11","Major13","AugmentedDominant7","AugmentedMajor7","Minor9","optional","pattern","concatenateAllValues","map","res","Object","keys","forEach","key","concat","greedyDisjunction","aliases","matchingGroup","slice","sort","a","b","lenCompare","length","alias","i","replace","chordRegexes","noteNaming","chordRegex","regexString","concatenateAllValuesForExtendeds","createRegexString","regexStringWithParens","createRegexStringWithParens","RegExp","patternWithParens","initializeChordRegex","initializeChordRegexes","rootLookups","addReverseLookups","chordQualitiesLookups","reverseDict","dict","chordExtendedsLookups","pair","quality","extendedsArr","element","extended","chordSuspendedsLookups","chordAddedsLookups","parse","str","opts","naming","match","root","foundExtended","added","suspended","altered","exec","bb","#","parseAltered","overridingRoot","substring","parseObject","notesSharp","notesFlat","moveNote","note","step","source","includes","noteIdx","indexOf","undefined","thirdsInterval","fifthInterval","extendedSeventhInterval","Dominant9","Diminished9","extendedNinthInterval","applyAltered","alter","sharp","flat","SORTED_PITCHES","ACCIDENTAL_PITCHES","PITCH_INDEXES","C#","D#","F#","G#","A#","MIDI_NUMBER_C0","MIN_MIDI_NUMBER","MAX_MIDI_NUMBER","NOTE_REGEX","NOTES_IN_OCTAVE","midiNumberAttributesCache","range","reduce","cache","midiNumber","pitchIndex","octave","Math","floor","pitchName","isAccidental","buildMidiNumberAttributes","getAttributes","attrs","Error","NATURAL_MIDI_NUMBERS","filter","MidiNumbers","fromNote","toLowerCase","_match","slicedToArray","letter","accidental","toUpperCase","parseInt","Key","onPlayNoteInput","_this","props","onStopNoteInput","_MidiNumbers$getAttri","this","pitchPositions","getAbsoluteKeyPosition","noteRange","first","_this$props","naturalKeyWidth","accidentalWidthRatio","useTouchEvents","gliss","active","disabled","children","react_default","createElement","className","classNames","ReactPiano__Key--accidental","ReactPiano__Key--natural","ReactPiano__Key--disabled","ReactPiano__Key--active","style","left","ratioToPercentage","getRelativeKeyPosition","width","onTouchStart","onTouchCancel","onTouchEnd","React","Component","ratio","defaultProps","Keyboard","last","getMidiNumbers","number","getNaturalKeyCount","keyWidth","getNaturalKeyWidth","keyWidthToHeight","getWidth","height","getHeight","_MidiNumbers$getAttri2","isActive","activeNotes","react_piano_Key","renderNoteLabel","ControlledPiano","state","isMouseDown","handleNoteChanges","_ref","prevActiveNotes","nextActiveNotes","notesStopped","difference","playNote","stopNote","getMidiNumberForKey","keyboardShortcuts","shortcut","find","sh","getKeyForMidiNumber","onKeyDown","event","ctrlKey","metaKey","shiftKey","onKeyUp","onMouseDown","setState","onMouseUp","_ref2","keyboardShortcut","window","addEventListener","removeEventListener","prevProps","prevState","data-testid","react_piano_Keyboard","_ref3","ReactPiano__NoteLabel--active","ReactPiano__NoteLabel--accidental","ReactPiano__NoteLabel--natural","Piano","handlePlayNoteInput","handleStopNoteInput","otherProps","objectWithoutProperties","react_piano_ControlledPiano","assign","DontTouchContainer","onClick","e","stopPropagation","BasicPiano","react_piano_Piano","App","currentChord","onChordChange","target","value","App_DontTouchContainer","chord","options","arguments","third","rootless","fifthless","notes","push","fifth","seventh","ninth","unshift","chordNotes","p","c","toConsumableArray","noteNumberToName","type","onChange","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51e85b9e.chunk.js","sourcesContent":["const English = {\n  A: ['A'],\n  Bb: ['Bb', 'A#', 'Asharp', 'Bflat'],\n  B: ['B'],\n  C: ['C'],\n  Db: ['Db', 'C#', 'Dflat', 'Csharp'],\n  D: ['D'],\n  Eb: ['Eb', 'D#', 'Eflat', 'Dsharp'],\n  E: ['E'],\n  F: ['F'],\n  Gb: ['Gb', 'F#', 'Gflat', 'Fsharp'],\n  G: ['G'],\n  Ab: ['Ab', 'G#', 'Aflat', 'Gsharp']\n}\n\nconst NorthernEuropean = {\n  A: ['A'],\n  Bb: ['B', 'A#', 'Asharp'],\n  B: ['H'],\n  C: ['C'],\n  Db: ['Db', 'C#', 'Dflat', 'Csharp'],\n  D: ['D'],\n  Eb: ['Eb', 'D#', 'Eflat', 'Dsharp'],\n  E: ['E'],\n  F: ['F'],\n  Gb: ['Gb', 'F#', 'Gflat', 'Fsharp'],\n  G: ['G'],\n  Ab: ['Ab', 'G#', 'Aflat', 'Gsharp']\n}\n\nconst SouthernEuropean = {\n  A: ['La'],\n  Bb: ['Tib', 'La#'],\n  B: ['Ti'],\n  C: ['Do'],\n  Db: ['Reb', 'Réb', 'Do#'],\n  D: ['Re', 'Ré'],\n  Eb: ['Mib', 'Re#'],\n  E: ['Mi'],\n  F: ['Fa'],\n  Gb: ['Solb', 'Sob', 'Fa#'],\n  G: ['Sol', 'So'],\n  Ab: ['Lab', 'So#', 'Sol#']\n}\n\nexport const noteNamings = {\n  English,\n  NorthernEuropean,\n  SouthernEuropean\n}\n","export const chordAddeds = {\n  Add9: ['add9', '2'],\n  Add11: ['add11', '4'],\n  Major6: ['6', 'maj6', 'major6', 'M6'],\n  SixNine: ['6/9'],\n  PowerChord: ['5'] // duh duh DUH, duh duh DUH-duh, duh duh DUH, duh duh ((c) Deep Purple)\n}\n","export const chordSuspendeds = {\n  Sus4: ['sus4', 'suspended', 'sus'],\n  Sus2: ['sus2', 'suspended2']\n}\n","export const chordQualities = {\n  Major: ['', 'major', 'maj', 'M'],\n  Minor: ['m', 'minor', 'min', '-'],\n  Augmented: ['aug', 'augmented', '+'],\n  Diminished: ['dim', 'diminished', 'o']\n}","export const chordExtendeds = {\n  // sevenths\n  Major7: ['Major', ['maj7', 'Maj7', 'M7', '+7']],\n  Minor7: ['Minor', ['m7', 'Min7', 'min7', 'minor7', '-7']],\n  Dominant7: ['Major', ['7', 'dom7', 'dominant7']],\n  MinorMajor7: ['Minor', ['mM7', '-M7']],\n  Diminished7: ['Diminished', ['dim7', 'diminished7', 'o7']],\n\n  // true extended\n  Major9: ['Major', ['maj9', 'M9', '9']],\n  Major11: ['Major', ['maj11', 'M11', '11']],\n  Major13: ['Major', ['maj13', 'M13', '13']],\n\n  // weird ones\n  AugmentedDominant7: ['Major', ['7#5', '7(#5]']],\n  AugmentedMajor7: ['Major', ['maj7#5', 'maj7(#5]']],\n\n  // TODO: I don't know what this one is - can't find it on wikipedia\n  Minor9: ['Minor', ['min9', 'm9', 'minor9']]\n}","import {\n  noteNamings\n} from './noteNamings'\nimport {\n  chordAddeds\n} from './chordAddeds.js'\nimport {\n  chordSuspendeds\n} from './chordSuspendeds'\nimport {\n  chordQualities\n} from './chordQualities'\nimport {\n  chordExtendeds\n} from './chordExtendeds'\n\nfunction initializeChordRegexes() {\n  let map = {}\n\n  Object.keys(noteNamings).forEach(function (noteNaming) {\n    map[noteNaming] = initializeChordRegex(noteNamings[noteNaming])\n  })\n  return map\n}\n\nfunction initializeChordRegex(noteNaming) {\n  let chordRegex = {}\n\n  let regexString = createRegexString(noteNaming)\n  let regexStringWithParens = createRegexStringWithParens(regexString)\n\n  chordRegex.regexString = regexString\n  chordRegex.regexStringWithParens = regexStringWithParens\n  chordRegex.pattern = new RegExp(regexString)\n  chordRegex.patternWithParens = new RegExp(regexStringWithParens)\n  return chordRegex\n}\n\nfunction optional(pattern) {\n  return '(' + pattern + '?)'\n}\n\nfunction concatenateAllValues(map) {\n  let res = []\n  Object.keys(map).forEach(function (key) {\n    res = res.concat(map[key])\n  })\n  return res\n}\n\n// extendeds are different; their values are an array of\n// [type, names]\nfunction concatenateAllValuesForExtendeds(map) {\n  let res = []\n  Object.keys(map).forEach(function (key) {\n    res = res.concat(map[key][1])\n  })\n  return res\n}\n\nfunction createRegexString(noteNaming) {\n  return greedyDisjunction(concatenateAllValues(noteNaming), true) + // root note\n    optional(greedyDisjunction(\n      concatenateAllValues(chordQualities).concat(\n        concatenateAllValuesForExtendeds(chordExtendeds)))) + // quality OR seventh\n    optional(greedyDisjunction(concatenateAllValues(chordAddeds))) + // add\n    optional(greedyDisjunction(concatenateAllValues(chordSuspendeds))) + // sus\n    \"((?:(?:b|#)[\\\\d]+){0,})\" + // altered chord b5 b7 b9 b13 b4 blah blah\n    // overridden root note (\"over\")\n    optional('(?:/' + greedyDisjunction(concatenateAllValues(noteNaming)) +\n      ')')\n}\n\nfunction createRegexStringWithParens(regexString) {\n  return '[\\\\(\\\\[]' + regexString + '[\\\\)\\\\]]'\n}\n\nfunction quote(str) {\n  // stolen from http://stackoverflow.com/a/3614500/680742\n  let regexpSpecialChars = /([[\\]^$|()\\\\+*?{}=!])/gi\n\n  return str.replace(regexpSpecialChars, '\\\\$1')\n}\n/**\n * Take an array of strings and make a greedy disjunction regex pattern out of it,\n * with the longest strings first, e.g. [\"sus4\",\"sus\",\"sus2\"] -->\n *\n * (sus4|sus2|sus)\n * @param allAliases\n * @return\n */\nfunction greedyDisjunction(aliases, matchingGroup) {\n  aliases = aliases.slice() // copy\n\n  // sort by longest string first\n  aliases.sort(function (a, b) {\n    let lenCompare = b.length - a.length\n    if (lenCompare !== 0) {\n      return lenCompare < 0 ? -1 : 1\n    }\n    // else sort by normal string comparison\n    return a < b ? -1 : 1\n  })\n\n  let res = '('\n\n  if (!matchingGroup) {\n    res += '?:' //  non-matching group\n  }\n\n  aliases.forEach(function (alias, i) {\n    if (!alias) {\n      return // e.g. the \"major\" quality can be expressed as an empty string, so skip in the regex\n    }\n    if (i > 0) {\n      res += '|'\n    }\n    res += quote(alias)\n  })\n\n  return res + ')'\n}\n\nexport const chordRegexes = initializeChordRegexes()","// given a string and a note naming, return the structured version of it.\n\nimport { noteNamings } from './noteNamings'\nimport { chordQualities } from './chordQualities'\nimport { chordExtendeds } from './chordExtendeds'\nimport { chordAddeds } from './chordAddeds.js'\nimport { chordSuspendeds } from './chordSuspendeds'\n\nexport const rootLookups = {}\n\nObject.keys(noteNamings).forEach(function (noteNaming) {\n  rootLookups[noteNaming] = {}\n  addReverseLookups(rootLookups[noteNaming], noteNamings[noteNaming])\n})\n\nexport const chordQualitiesLookups = {}\n\naddReverseLookups(chordQualitiesLookups, chordQualities)\n\nexport const chordExtendedsLookups = {}\n\naddReverseLookupsForExtendeds(chordExtendedsLookups, chordExtendeds)\n\nexport const chordSuspendedsLookups = {}\n\naddReverseLookups(chordSuspendedsLookups, chordSuspendeds)\n\nexport const chordAddedsLookups = {}\n\naddReverseLookups(chordAddedsLookups, chordAddeds)\n\nfunction addReverseLookups (reverseDict, dict) {\n  Object.keys(dict).forEach(function (key) {\n    let arr = dict[key]\n    arr.forEach(function (element) {\n      reverseDict[element] = key\n    })\n  })\n}\n\n// extendeds are a little different, because they contain both the quality\n// and the extendeds\nfunction addReverseLookupsForExtendeds (reverseDict, dict) {\n  Object.keys(dict).forEach(function (key) {\n    let pair = dict[key]\n    let quality = pair[0]\n    let extendedsArr = pair[1]\n    extendedsArr.forEach(function (element) {\n      reverseDict[element] = {\n        quality: quality,\n        extended: key\n      }\n    })\n  })\n}\n","import {\n  chordRegexes\n} from './chordRegexes'\nimport {\n  rootLookups,\n  chordExtendedsLookups,\n  chordQualitiesLookups,\n  chordAddedsLookups,\n  chordSuspendedsLookups\n} from './reverseLookups'\n\nfunction parseObject(match, noteNaming) {\n  // match objects is 6 elements:\n  // full string, root, quality or extended, added, suspended, overriding root\n  // e.g. [\"Cmaj7\", \"C\", \"maj7\", \"\", \"\", \"\"]\n  let res = {}\n\n  res.root = rootLookups[noteNaming][match[1]]\n\n  let foundExtended = chordExtendedsLookups[match[2]]\n  if (foundExtended) {\n    res.quality = foundExtended.quality\n    res.extended = foundExtended.extended\n  } else { // normal quality without extended\n    res.quality = chordQualitiesLookups[match[2]]\n  }\n\n  if (match[3]) {\n    res.added = chordAddedsLookups[match[3]]\n  }\n\n  if (match[4]) {\n    res.suspended = chordSuspendedsLookups[match[4]]\n  }\n\n  if (match[5]) {\n    res.altered = parseAltered(match[5])\n  }\n\n  if (match[6]) {\n    // substring(1) to cut off the slash, because it's e.g. \"/F\"\n    res.overridingRoot = rootLookups[noteNaming][match[6].substring(1)]\n  }\n\n  return res\n}\n\nfunction parseAltered(str) {\n  let pattern = /((b|#)([\\d]{1,}))/g\n  let match = pattern.exec(str)\n  const res = {};\n  while (match != null) {\n    res[match[3] % 13] = {\n      'b': 'flat',\n      'bb': 'doubleflat',\n      '#': 'sharp'\n    } [match[2]];\n    match = pattern.exec(str)\n  }\n  return res;\n}\n\nexport function parse(str, opts) {\n  opts = opts || {}\n  let noteNaming = opts.naming || 'English'\n\n  let match = str.match(chordRegexes[noteNaming].pattern)\n  return match && parseObject(match, noteNaming)\n}","const notesSharp = [\r\n    \"C\",\r\n    \"C#\",\r\n    \"D\",\r\n    \"D#\",\r\n    \"E\",\r\n    \"F\",\r\n    \"F#\",\r\n    \"G\",\r\n    \"G#\",\r\n    \"A\",\r\n    \"A#\",\r\n    \"B\"\r\n];\r\nconst notesFlat = [\r\n    \"C\",\r\n    \"Db\",\r\n    \"D\",\r\n    \"Eb\",\r\n    \"E\",\r\n    \"F\",\r\n    \"Gb\",\r\n    \"G\",\r\n    \"Ab\",\r\n    \"A\",\r\n    \"Bb\",\r\n    \"B\"\r\n];\r\nconst moveNote = (note, step) => {\r\n    let source = notesSharp.includes(note) ?\r\n        notesSharp :\r\n        notesFlat.includes(note) ?\r\n        notesFlat :\r\n        null;\r\n    const noteIdx = source.indexOf(note);\r\n    if (noteIdx !== undefined) {\r\n        source = step > 0 ? notesSharp : notesFlat;\r\n        step = step < 0 ? step + source.length : step;\r\n        return source[(noteIdx + step) % source.length];\r\n    }\r\n};\r\n\r\nconst thirdsInterval = {\r\n    Major: 0,\r\n    Minor: -1,\r\n    Augmented: 0,\r\n    Diminished: -1\r\n};\r\nconst fifthInterval = {\r\n    Major: 0,\r\n    Minor: 0,\r\n    Augmented: 1,\r\n    Diminished: -1\r\n};\r\nconst extendedSeventhInterval = {\r\n    Major7: 0,\r\n    Minor7: -1,\r\n    Dominant7: -1,\r\n    MinorMajor7: 0,\r\n    Diminished7: -2,\r\n\r\n    Major9: 0,\r\n    Minor9: -1,\r\n    Dominant9: -1,\r\n    Diminished9: -2\r\n};\r\n\r\nconst extendedNinthInterval = {\r\n    Major9: 0,\r\n    Minor9: 0,\r\n    Dominant9: 0,\r\n    Diminished9: 0\r\n};\r\n\r\nconst applyAltered = note => alter =>\r\n    moveNote(\r\n        note, {\r\n            sharp: 1,\r\n            flat: -1\r\n        } [alter]\r\n    );\r\nexport const chordNotes = (chord, options = {}) => {\r\n    if (chord) {\r\n        const {\r\n            root,\r\n            quality,\r\n            extended,\r\n            suspended,\r\n            overridingRoot,\r\n            altered\r\n        } = chord;\r\n        const {\r\n            rootless,\r\n            fifthless\r\n        } = options;\r\n        let notes = [];\r\n        if (!rootless) notes.push(root);\r\n        let third;\r\n        if (suspended === \"Sus4\") third = moveNote(root, 5)\r\n        else if (suspended === 'Sus2') third = moveNote(root, 2)\r\n        else third = moveNote(moveNote(root, 4), thirdsInterval[quality]);\r\n        if (altered && \"3\" in altered) third = applyAltered(third)(altered[3]);\r\n        notes.push(third);\r\n\r\n        if (!fifthless) {\r\n            let fifth = moveNote(moveNote(root, 7), fifthInterval[quality]);\r\n            if (altered && \"5\" in altered) fifth = applyAltered(fifth)(altered[5]);\r\n            notes.push(fifth);\r\n        }\r\n        if (extended) {\r\n            if (extended in extendedSeventhInterval) {\r\n                let seventh = moveNote(\r\n                    moveNote(root, 11),\r\n                    extendedSeventhInterval[extended]\r\n                );\r\n                if (altered && \"7\" in altered)\r\n                    seventh = applyAltered(seventh)(altered[7]);\r\n                notes.push(seventh);\r\n            }\r\n            if (extended in extendedNinthInterval) {\r\n                let ninth = moveNote(\r\n                    moveNote(root, 14),\r\n                    extendedNinthInterval[extended]\r\n                );\r\n                if (altered && \"9\" in altered) ninth = applyAltered(ninth)(altered[9]);\r\n                notes.push(ninth);\r\n            }\r\n        }\r\n        if (overridingRoot) {\r\n            notes = notes.filter(note => note !== overridingRoot);\r\n            notes.unshift(overridingRoot);\r\n        }\r\n        return notes;\r\n    }\r\n};","import range from 'just-range';\n\nconst SORTED_PITCHES = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\nconst ACCIDENTAL_PITCHES = ['Db', 'Eb', 'Gb', 'Ab', 'Bb'];\nconst PITCH_INDEXES = {\n  C: 0,\n  'C#': 1,\n  Db: 1,\n  D: 2,\n  'D#': 3,\n  Eb: 3,\n  E: 4,\n  F: 5,\n  'F#': 6,\n  Gb: 6,\n  G: 7,\n  'G#': 8,\n  Ab: 8,\n  A: 9,\n  'A#': 10,\n  Bb: 10,\n  B: 11,\n};\nconst MIDI_NUMBER_C0 = 12;\nconst MIN_MIDI_NUMBER = MIDI_NUMBER_C0;\nconst MAX_MIDI_NUMBER = 127;\nconst NOTE_REGEX = /([a-g])([#b]?)(\\d+)/;\nconst NOTES_IN_OCTAVE = 12;\n\n// Converts string notes in scientific pitch notation to a MIDI number, or null.\n//\n// Example: \"c#0\" => 13, \"eb5\" => 75, \"abc\" => null\n//\n// References:\n// - http://www.flutopedia.com/octave_notation.htm\n// - https://github.com/danigb/tonal/blob/master/packages/note/index.js\nfunction fromNote(note) {\n  if (!note) {\n    throw Error('Invalid note argument');\n  }\n  const match = NOTE_REGEX.exec(note.toLowerCase());\n  if (!match) {\n    throw Error('Invalid note argument');\n  }\n  const [, letter, accidental, octave] = match;\n  const pitchName = `${letter.toUpperCase()}${accidental}`;\n  const pitchIndex = PITCH_INDEXES[pitchName];\n  if (pitchIndex == null) {\n    throw Error('Invalid note argument');\n  }\n  return MIDI_NUMBER_C0 + pitchIndex + NOTES_IN_OCTAVE * parseInt(octave, 10);\n}\n\n//\n// Build cache for getAttributes\n//\nfunction buildMidiNumberAttributes(midiNumber) {\n  const pitchIndex = (midiNumber - MIDI_NUMBER_C0) % NOTES_IN_OCTAVE;\n  const octave = Math.floor((midiNumber - MIDI_NUMBER_C0) / NOTES_IN_OCTAVE);\n  const pitchName = SORTED_PITCHES[pitchIndex];\n  return {\n    note: `${pitchName}${octave}`,\n    pitchName,\n    octave,\n    midiNumber,\n    isAccidental: ACCIDENTAL_PITCHES.includes(pitchName),\n  };\n}\n\nfunction buildMidiNumberAttributesCache() {\n  return range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).reduce((cache, midiNumber) => {\n    cache[midiNumber] = buildMidiNumberAttributes(midiNumber);\n    return cache;\n  }, {});\n}\n\nconst midiNumberAttributesCache = buildMidiNumberAttributesCache();\n\n// Returns an object containing various attributes for a given MIDI number.\n// Throws error for invalid midiNumbers.\nfunction getAttributes(midiNumber) {\n  const attrs = midiNumberAttributesCache[midiNumber];\n  if (!attrs) {\n    throw Error('Invalid MIDI number');\n  }\n  return attrs;\n}\n\n// Returns all MIDI numbers corresponding to natural notes, e.g. C and not C# or Bb.\nconst NATURAL_MIDI_NUMBERS = range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).filter(\n  (midiNumber) => !getAttributes(midiNumber).isAccidental,\n);\n\nexport default {\n  fromNote,\n  getAttributes,\n  MIN_MIDI_NUMBER,\n  MAX_MIDI_NUMBER,\n  NATURAL_MIDI_NUMBERS,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport MidiNumbers from \"./MidiNumbers\";\n\nclass Key extends React.Component {\n  static propTypes = {\n    midiNumber: PropTypes.number.isRequired,\n    naturalKeyWidth: PropTypes.number.isRequired, // Width as a ratio between 0 and 1\n    gliss: PropTypes.bool.isRequired,\n    useTouchEvents: PropTypes.bool.isRequired,\n    accidental: PropTypes.bool.isRequired,\n    active: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool.isRequired,\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    accidentalWidthRatio: PropTypes.number.isRequired,\n    pitchPositions: PropTypes.object.isRequired,\n    children: PropTypes.node\n  };\n\n  static defaultProps = {\n    accidentalWidthRatio: 0.65,\n    pitchPositions: {\n      C: 0,\n      Db: 0.55,\n      D: 1,\n      Eb: 1.8,\n      E: 2,\n      F: 3,\n      Gb: 3.5,\n      G: 4,\n      Ab: 4.7,\n      A: 5,\n      Bb: 5.85,\n      B: 6\n    }\n  };\n\n  onPlayNoteInput = () => {\n    this.props.onPlayNoteInput(this.props.midiNumber);\n  };\n\n  onStopNoteInput = () => {\n    this.props.onStopNoteInput(this.props.midiNumber);\n  };\n\n  // Key position is represented by the number of natural key widths from the left\n  getAbsoluteKeyPosition(midiNumber) {\n    const OCTAVE_WIDTH = 7;\n    const { octave, pitchName } = MidiNumbers.getAttributes(midiNumber);\n    const pitchPosition = this.props.pitchPositions[pitchName];\n    const octavePosition = OCTAVE_WIDTH * octave;\n    return pitchPosition + octavePosition;\n  }\n\n  getRelativeKeyPosition(midiNumber) {\n    return (\n      this.getAbsoluteKeyPosition(midiNumber) -\n      this.getAbsoluteKeyPosition(this.props.noteRange.first)\n    );\n  }\n\n  render() {\n    const {\n      naturalKeyWidth,\n      accidentalWidthRatio,\n      midiNumber,\n      gliss,\n      useTouchEvents,\n      accidental,\n      active,\n      disabled,\n      children\n    } = this.props;\n\n    // Need to conditionally include/exclude handlers based on useTouchEvents,\n    // because otherwise mobile taps double fire events.\n    return (\n      <div\n        className={classNames(\"ReactPiano__Key\", {\n          \"ReactPiano__Key--accidental\": accidental,\n          \"ReactPiano__Key--natural\": !accidental,\n          \"ReactPiano__Key--disabled\": disabled,\n          \"ReactPiano__Key--active\": active\n        })}\n        style={{\n          left: ratioToPercentage(\n            this.getRelativeKeyPosition(midiNumber) * naturalKeyWidth\n          ),\n          width: ratioToPercentage(\n            accidental\n              ? accidentalWidthRatio * naturalKeyWidth\n              : naturalKeyWidth\n          )\n        }}\n        // onMouseDown={useTouchEvents ? null : this.onPlayNoteInput}\n        // onMouseUp={useTouchEvents ? null : this.onStopNoteInput}\n        // onMouseEnter={gliss ? this.onPlayNoteInput : null}\n        // onMouseLeave={this.onStopNoteInput}\n        onTouchStart={useTouchEvents ? this.onPlayNoteInput : null}\n        onTouchCancel={useTouchEvents ? this.onStopNoteInput : null}\n        onTouchEnd={useTouchEvents ? this.onStopNoteInput : null}\n      >\n        <div className=\"ReactPiano__NoteLabelContainer\">{children}</div>\n      </div>\n    );\n  }\n}\n\nfunction ratioToPercentage(ratio) {\n  return `${ratio * 100}%`;\n}\n\nexport default Key;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport range from 'just-range';\nimport classNames from 'classnames';\n\nimport Key from './Key';\nimport MidiNumbers from './MidiNumbers';\n\nclass Keyboard extends React.Component {\n  static propTypes = {\n    noteRange: noteRangePropType,\n    activeNotes: PropTypes.arrayOf(PropTypes.number),\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    renderNoteLabel: PropTypes.func.isRequired,\n    keyWidthToHeight: PropTypes.number.isRequired,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    gliss: PropTypes.bool,\n    useTouchEvents: PropTypes.bool,\n    // If width is not provided, must have fixed width and height in parent container\n    width: PropTypes.number,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    gliss: false,\n    useTouchEvents: false,\n    keyWidthToHeight: 0.33,\n    renderNoteLabel: () => {},\n  };\n\n  // Range of midi numbers on keyboard\n  getMidiNumbers() {\n    return range(this.props.noteRange.first, this.props.noteRange.last + 1);\n  }\n\n  getNaturalKeyCount() {\n    return this.getMidiNumbers().filter((number) => {\n      const { isAccidental } = MidiNumbers.getAttributes(number);\n      return !isAccidental;\n    }).length;\n  }\n\n  // Returns a ratio between 0 and 1\n  getNaturalKeyWidth() {\n    return 1 / this.getNaturalKeyCount();\n  }\n\n  getWidth() {\n    return this.props.width ? this.props.width : '100%';\n  }\n\n  getHeight() {\n    if (!this.props.width) {\n      return '100%';\n    }\n    const keyWidth = this.props.width * this.getNaturalKeyWidth();\n    return `${keyWidth / this.props.keyWidthToHeight}px`;\n  }\n\n  render() {\n    const naturalKeyWidth = this.getNaturalKeyWidth();\n    return (\n      <div\n        className={classNames('ReactPiano__Keyboard', this.props.className)}\n        style={{ width: this.getWidth(), height: this.getHeight() }}\n      >\n        {this.getMidiNumbers().map((midiNumber) => {\n          const { note, isAccidental } = MidiNumbers.getAttributes(midiNumber);\n          const isActive = this.props.activeNotes.includes(midiNumber);\n          return (\n            <Key\n              naturalKeyWidth={naturalKeyWidth}\n              midiNumber={midiNumber}\n              noteRange={this.props.noteRange}\n              active={isActive}\n              accidental={isAccidental}\n              disabled={this.props.disabled}\n              onPlayNoteInput={this.props.onPlayNoteInput}\n              onStopNoteInput={this.props.onStopNoteInput}\n              gliss={this.props.gliss}\n              useTouchEvents={this.props.useTouchEvents}\n              key={midiNumber}\n            >\n              {this.props.disabled\n                ? null\n                : this.props.renderNoteLabel({\n                    isActive,\n                    isAccidental,\n                    midiNumber,\n                  })}\n            </Key>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction isNaturalMidiNumber(value) {\n  if (typeof value !== 'number') {\n    return false;\n  }\n  return MidiNumbers.NATURAL_MIDI_NUMBERS.includes(value);\n}\n\nfunction noteRangePropType(props, propName, componentName) {\n  const { first, last } = props[propName];\n  if (!first || !last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} must be an object with .first and .last values.`,\n    );\n  }\n  if (!isNaturalMidiNumber(first) || !isNaturalMidiNumber(last)) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} values must be valid MIDI numbers, and should not be accidentals (sharp or flat notes).`,\n    );\n  }\n  if (first >= last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName}.first must be smaller than ${propName}.last.`,\n    );\n  }\n}\n\nexport default Keyboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\nimport Keyboard from './Keyboard';\n\nclass ControlledPiano extends React.Component {\n  static propTypes = {\n    noteRange: PropTypes.object.isRequired,\n    activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n    playNote: PropTypes.func.isRequired,\n    stopNote: PropTypes.func.isRequired,\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    renderNoteLabel: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    width: PropTypes.number,\n    keyWidthToHeight: PropTypes.number,\n    keyboardShortcuts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        midiNumber: PropTypes.number.isRequired,\n      }),\n    ),\n  };\n\n  static defaultProps = {\n    renderNoteLabel: ({ keyboardShortcut, midiNumber, isActive, isAccidental }) =>\n      keyboardShortcut ? (\n        <div\n          className={classNames('ReactPiano__NoteLabel', {\n            'ReactPiano__NoteLabel--active': isActive,\n            'ReactPiano__NoteLabel--accidental': isAccidental,\n            'ReactPiano__NoteLabel--natural': !isAccidental,\n          })}\n        >\n          {keyboardShortcut}\n        </div>\n      ) : null,\n  };\n\n  state = {\n    isMouseDown: false,\n    useTouchEvents: false,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeyDown);\n    window.addEventListener('keyup', this.onKeyUp);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.activeNotes !== prevProps.activeNotes) {\n      this.handleNoteChanges({\n        prevActiveNotes: prevProps.activeNotes || [],\n        nextActiveNotes: this.props.activeNotes || [],\n      });\n    }\n  }\n\n  // This function is responsible for diff'ing activeNotes\n  // and playing or stopping notes accordingly.\n  handleNoteChanges = ({ prevActiveNotes, nextActiveNotes }) => {\n    if (this.props.disabled) {\n      return;\n    }\n    const notesStopped = difference(prevActiveNotes, nextActiveNotes);\n    const notesStarted = difference(nextActiveNotes, prevActiveNotes);\n    notesStarted.forEach((midiNumber) => {\n      this.props.playNote(midiNumber);\n    });\n    notesStopped.forEach((midiNumber) => {\n      this.props.stopNote(midiNumber);\n    });\n  };\n\n  getMidiNumberForKey = (key) => {\n    if (!this.props.keyboardShortcuts) {\n      return null;\n    }\n    const shortcut = this.props.keyboardShortcuts.find((sh) => sh.key === key);\n    return shortcut && shortcut.midiNumber;\n  };\n\n  getKeyForMidiNumber = (midiNumber) => {\n    if (!this.props.keyboardShortcuts) {\n      return null;\n    }\n    const shortcut = this.props.keyboardShortcuts.find((sh) => sh.midiNumber === midiNumber);\n    return shortcut && shortcut.key;\n  };\n\n  onKeyDown = (event) => {\n    // Don't conflict with existing combinations like ctrl + t\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n    const midiNumber = this.getMidiNumberForKey(event.key);\n    if (midiNumber) {\n      this.onPlayNoteInput(midiNumber);\n    }\n  };\n\n  onKeyUp = (event) => {\n    // This *should* also check for event.ctrlKey || event.metaKey || event.ShiftKey like onKeyDown does,\n    // but at least on Mac Chrome, when mashing down many alphanumeric keystrokes at once,\n    // ctrlKey is fired unexpectedly, which would cause onStopNote to NOT be fired, which causes problematic\n    // lingering notes. Since it's fairly safe to call onStopNote even when not necessary,\n    // the ctrl/meta/shift check is removed to fix that issue.\n    const midiNumber = this.getMidiNumberForKey(event.key);\n    if (midiNumber) {\n      this.onStopNoteInput(midiNumber);\n    }\n  };\n\n  onPlayNoteInput = (midiNumber) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // Pass in previous activeNotes for recording functionality\n    this.props.onPlayNoteInput(midiNumber, this.props.activeNotes);\n  };\n\n  onStopNoteInput = (midiNumber) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // Pass in previous activeNotes for recording functionality\n    this.props.onStopNoteInput(midiNumber, this.props.activeNotes);\n  };\n\n  onMouseDown = () => {\n    this.setState({\n      isMouseDown: true,\n    });\n  };\n\n  onMouseUp = () => {\n    this.setState({\n      isMouseDown: false,\n    });\n  };\n\n  onTouchStart = () => {\n    this.setState({\n      useTouchEvents: true,\n    });\n  };\n\n  renderNoteLabel = ({ midiNumber, isActive, isAccidental }) => {\n    const keyboardShortcut = this.getKeyForMidiNumber(midiNumber);\n    return this.props.renderNoteLabel({ keyboardShortcut, midiNumber, isActive, isAccidental });\n  };\n\n  render() {\n    return (\n      <div\n        style={{ width: '100%', height: '100%' }}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onTouchStart={this.onTouchStart}\n        data-testid=\"container\"\n      >\n        <Keyboard\n          noteRange={this.props.noteRange}\n          onPlayNoteInput={this.onPlayNoteInput}\n          onStopNoteInput={this.onStopNoteInput}\n          activeNotes={this.props.activeNotes}\n          className={this.props.className}\n          disabled={this.props.disabled}\n          width={this.props.width}\n          keyWidthToHeight={this.props.keyWidthToHeight}\n          gliss={this.state.isMouseDown}\n          useTouchEvents={this.state.useTouchEvents}\n          renderNoteLabel={this.renderNoteLabel}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ControlledPiano;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\nimport ControlledPiano from './ControlledPiano';\nimport Keyboard from './Keyboard';\n\nclass Piano extends React.Component {\n  static propTypes = {\n    noteRange: PropTypes.object.isRequired,\n    activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired),\n    playNote: PropTypes.func.isRequired,\n    stopNote: PropTypes.func.isRequired,\n    onPlayNoteInput: PropTypes.func,\n    onStopNoteInput: PropTypes.func,\n    renderNoteLabel: PropTypes.func,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    width: PropTypes.number,\n    keyWidthToHeight: PropTypes.number,\n    keyboardShortcuts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        midiNumber: PropTypes.number.isRequired,\n      }),\n    ),\n  };\n\n  state = {\n    activeNotes: this.props.activeNotes || [],\n  };\n\n  componentDidUpdate(prevProps) {\n    // Make activeNotes \"controllable\" by using internal\n    // state by default, but allowing prop overrides.\n    if (\n      prevProps.activeNotes !== this.props.activeNotes &&\n      this.state.activeNotes !== this.props.activeNotes\n    ) {\n      this.setState({\n        activeNotes: this.props.activeNotes || [],\n      });\n    }\n  }\n\n  handlePlayNoteInput = (midiNumber) => {\n    if (this.props.onPlayNoteInput) {\n      this.props.onPlayNoteInput(midiNumber, { prevActiveNotes: this.state.activeNotes });\n    }\n    this.setState((prevState) => {\n      // Don't append note to activeNotes if it's already present\n      if (prevState.activeNotes.includes(midiNumber)) {\n        return null;\n      }\n      return {\n        activeNotes: prevState.activeNotes.concat(midiNumber),\n      };\n    });\n  };\n\n  handleStopNoteInput = (midiNumber) => {\n    if (this.props.onStopNoteInput) {\n      this.props.onStopNoteInput(midiNumber, { prevActiveNotes: this.state.activeNotes });\n    }\n    this.setState((prevState) => ({\n      activeNotes: prevState.activeNotes.filter((note) => midiNumber !== note),\n    }));\n  };\n\n  render() {\n    const { activeNotes, onPlayNoteInput, onStopNoteInput, ...otherProps } = this.props;\n    return (\n      <ControlledPiano\n        activeNotes={this.state.activeNotes}\n        onPlayNoteInput={this.handlePlayNoteInput}\n        onStopNoteInput={this.handleStopNoteInput}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nexport default Piano;\n","import MidiNumbers from './MidiNumbers';\n\nfunction createKeyboardShortcuts({ firstNote, lastNote, keyboardConfig }) {\n  let currentMidiNumber = firstNote;\n  let naturalKeyIndex = 0;\n  let keyboardShortcuts = [];\n\n  while (\n    // There are still keys to be assigned\n    naturalKeyIndex < keyboardConfig.length &&\n    // Note to be assigned does not surpass range\n    currentMidiNumber <= lastNote\n  ) {\n    const key = keyboardConfig[naturalKeyIndex];\n    const { isAccidental } = MidiNumbers.getAttributes(currentMidiNumber);\n    if (isAccidental) {\n      keyboardShortcuts.push({\n        key: key.flat,\n        midiNumber: currentMidiNumber,\n      });\n    } else {\n      keyboardShortcuts.push({\n        key: key.natural,\n        midiNumber: currentMidiNumber,\n      });\n      naturalKeyIndex += 1;\n    }\n    currentMidiNumber += 1;\n  }\n  return keyboardShortcuts;\n}\n\nexport default {\n  create: createKeyboardShortcuts,\n  // Preset configurations\n  BOTTOM_ROW: [\n    { natural: 'z', flat: 'a', sharp: 's' },\n    { natural: 'x', flat: 's', sharp: 'd' },\n    { natural: 'c', flat: 'd', sharp: 'f' },\n    { natural: 'v', flat: 'f', sharp: 'g' },\n    { natural: 'b', flat: 'g', sharp: 'h' },\n    { natural: 'n', flat: 'h', sharp: 'j' },\n    { natural: 'm', flat: 'j', sharp: 'k' },\n    { natural: ',', flat: 'k', sharp: 'l' },\n    { natural: '.', flat: 'l', sharp: ';' },\n    { natural: '/', flat: ';', sharp: \"'\" },\n  ],\n  HOME_ROW: [\n    { natural: 'a', flat: 'q', sharp: 'w' },\n    { natural: 's', flat: 'w', sharp: 'e' },\n    { natural: 'd', flat: 'e', sharp: 'r' },\n    { natural: 'f', flat: 'r', sharp: 't' },\n    { natural: 'g', flat: 't', sharp: 'y' },\n    { natural: 'h', flat: 'y', sharp: 'u' },\n    { natural: 'j', flat: 'u', sharp: 'i' },\n    { natural: 'k', flat: 'i', sharp: 'o' },\n    { natural: 'l', flat: 'o', sharp: 'p' },\n    { natural: ';', flat: 'p', sharp: '[' },\n    { natural: \"'\", flat: '[', sharp: ']' },\n  ],\n  QWERTY_ROW: [\n    { natural: 'q', flat: '1', sharp: '2' },\n    { natural: 'w', flat: '2', sharp: '3' },\n    { natural: 'e', flat: '3', sharp: '4' },\n    { natural: 'r', flat: '4', sharp: '5' },\n    { natural: 't', flat: '5', sharp: '6' },\n    { natural: 'y', flat: '6', sharp: '7' },\n    { natural: 'u', flat: '7', sharp: '8' },\n    { natural: 'i', flat: '8', sharp: '9' },\n    { natural: 'o', flat: '9', sharp: '0' },\n    { natural: 'p', flat: '0', sharp: '-' },\n    { natural: '[', flat: '-', sharp: '=' },\n  ],\n};\n","import React, { Component } from \"react\";\nimport { parse } from \"./library/chord-magic\";\nimport { chordNotes } from \"./library/chord-notes\";\nimport { Piano, KeyboardShortcuts, MidiNumbers } from \"./library/react-piano\";\nimport { noteNumberToName } from \"midiutils\";\nimport \"react-piano/dist/styles.css\";\n\nconst noteRange = {\n  first: MidiNumbers.fromNote(\"c2\"),\n  last: MidiNumbers.fromNote(\"b3\")\n};\n\nconst DontTouchContainer = props => {\n  return (\n    <div className=\"piano-container\" onClick={e => e.stopPropagation()}>\n      {props.children}\n    </div>\n  );\n};\n\nfunction BasicPiano(props) {\n  return (\n    <Piano\n      noteRange={noteRange}\n      playNote={() => {}}\n      stopNote={() => {}}\n      width={1000}\n      {...props}\n    />\n  );\n}\n\nclass App extends Component {\n  state = {\n    currentChord: \"Cm7b5\"\n  };\n\n  onChordChange = event => {\n    this.setState({\n      currentChord: event.target.value\n    });\n  };\n\n  render() {\n    const { currentChord } = this.state;\n    const { onChordChange } = this;\n    return (\n      <div className=\"App\">\n        <DontTouchContainer>\n          <BasicPiano\n            activeNotes={\n              parse(currentChord)\n                ? [2, 3]\n                    .map(octave =>\n                      chordNotes(parse(currentChord)).map(e =>\n                        MidiNumbers.fromNote(e + octave)\n                      )\n                    )\n                    .reduce((p, c) => [...p, ...c])\n                : []\n            }\n            className=\"MyCoolPiano\"\n            renderNoteLabel={({ isActive, midiNumber }) => {\n              if (isActive) {\n                const note = noteNumberToName(midiNumber);\n                return note.includes(\"-\") ? note[0] : note.substring(0, 2);\n              }\n            }}\n          />\n        </DontTouchContainer>\n        <h2> Enter your Chord! </h2>\n        <input type=\"text\" value={currentChord} onChange={onChordChange} />\n        <div className=\"notations\">\n          <h3> Notations </h3>\n          <ul>\n            <li> Major 7 th(maj7) </li> <li> Minor 7 th(m7 / -7) </li>\n            <li> Dominant 7 th(7) </li> <li> Half - Dimished 7 th(m7b5) </li>\n            <li> Minor Major(mM7) </li> <li> Root(C / D) </li>\n            <li> Suspended(sus4 / sus2) </li>\n            <li> Added(add9 / add11): Not yet implemented </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}